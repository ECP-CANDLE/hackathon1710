# General steps:
# 1. create a python-intel environment to build tensorflow in
# 2. build tensorflow
# 3. create a tensorflow/horovod environment
# 4. test the new environment


# 1. create a python-intel environment to build tensorflow in

git clone https://github.com/Candle-ECP/hackathon1710
pushd hackathon1710

conda create -y -n tf-1.3.0_eigen_hv-0.9.6 -c intel intelpython2_core python=2
source activate tf-1.3.0_eigen_hv-0.9.6
conda install -y -c intel scikit-learn
conda install -y   backports
conda install -y   backports.weakref=1.0rc1
conda install -y   bleach=1.5.0
conda install -y   funcsigs=1.0.2
conda install -y   h5py=2.7.0 
conda install -y   libgpuarray=0.6.9
conda install -y   libprotobuf=3.4.0
conda install -y   mako=1.0.6
conda install -y   markdown=2.6.9
conda install -y   mkl-service=1.1.2
conda install -y   mock=2.0.0
conda install -y   nose=1.3.7
conda install -y   protobuf=3.4.0
conda install -y   pygpu=0.6.9
conda install -y   tensorflow-base=1.3.0
conda install -y   theano=0.9.0
conda install -y   werkzeug=0.12.2



# 2. Install optimized tensorflow from intel
wget https://anaconda.org/intel/tensorflow/1.3.0/download/tensorflow-1.3.0-cp27-cp27mu-linux_x86_64.whl
pip install tensorflow-1.3.0-cp27-cp27mu-linux_x86_64.whl
conda install --no-deps keras=2.0.5

# 3. Install horovod
git clone https://github.com/brettin/horovod
pushd horovod
CC=icc CXX=icpc LD=cc\ -Wl,-rpath=/opt/intel/compilers_and_libraries_2018.0.128/linux/compiler/lib/intel64 CCSHARED=cc HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_CPU_ALLGATHER=MPI HOROVOD_CPU_BROADCAST=MPI LDSHARED=CC\ -Wl,-Bdynamic\ -shared\ -Wl,-rpath=/opt/intel/compilers_and_libraries_2018.0.128/linux/compiler/lib/intel64 python mpich-setup.py install


===============  END =============

# 2. build tensorflow

 export PATH=/home/brettin/bazel-0.4.5/output:$PATH
module load java
#  module load gcc
# rm -rf $HOME/.cache/bazel

wget https://github.com/tensorflow/tensorflow/archive/v1.3.0.tar.gz
tar -xvzf v1.3.0.tar.gz
pushd tensorflow-1.3.0/
./configure

# for 1.3.0 need to replace sha check sums with new ones in tensorflow/workspace.bzl

bazel build --config=mkl --copt=-DEIGEN_USE_VML -c opt //tensorflow/tools/pip_package:build_pip_package
bazel-bin/tensorflow/tools/pip_package/build_pip_package /home/brettin/hackathon1710/intel-tensorflow-1.3.1_eigen
popd

pip install intel-tensorflow-1.3.1_eigen/tensorflow-1.3.0-cp27-cp27mu-linux_x86_64.whl



# BUILD HOROVOD
# Compile hovorod

git clone https://github.com/brettin/horovod
pushd horovod

CC=icc CXX=icpc LD=cc\ -Wl,-rpath=/opt/intel/compilers_and_libraries_2018.0.128/linux/compiler/lib/intel64 CCSHARED=cc HOROVOD_CPU_ALLREDUCE=MPI HOROVOD_CPU_ALLGATHER=MPI HOROVOD_CPU_BROADCAST=MPI LDSHARED=CC\ -Wl,-Bdynamic\ -shared\ -Wl,-rpath=/opt/intel/compilers_and_libraries_2018.0.128/linux/compiler/lib/intel64 python mpich-setup.py install


# To actually run a test (last step)

  994  qsub -I -t 1:00:00 -n 8 -A datascience
  983  source activate horovod-tfi
  984  export LD_LIBRARY_PATH=/home/pbalapra/.conda/envs/horovod-tfi/lib:${LD_LIBRARY_PATH}
  985  aprun -N 1 -n 8 -b python debug.py












source deactivate


# 3. create a tensorflow/horovod environment

conda install keras
pip install /home/brettin/tensorflow_mpi/tensorflow-1.3.1_eigen/tensorflow-1.3.1-cp27-cp27mu-linux_x86_64.whl
conda install -c intel scikit-learn
conda install --no-update-deps readline
conda install --no-update-deps future
# This needs work, Prasanna is working on it.
# pip install horovod

source deactivate tensorflow-v1.3_horovod-v0.9.6


# 4. test the new environment
qsub -I -n 1 -t 100 -A Candle_ECP
source activate tensorflow-v1.3_horovod-v0.9.6
cd ~/local/studies/
qsub qsub_test.sh



